{"ast":null,"code":"var _jsxFileName = \"/workspaces/projetoreactjsaluno/src/Componentes/modulo04/RenderizaListaVetorRemove.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderizaListaVetorRemove = () => {\n  _s();\n  const [alunos, setAlunos] = useState([{\n    id: 1,\n    nome: \"Douglas\",\n    matricula: 12345\n  }, {\n    id: 2,\n    nome: \"Pedro\",\n    matricula: 34567\n  }, {\n    id: 3,\n    nome: \"Ricardo\",\n    matricula: 67890\n  }, {\n    id: 4,\n    nome: \"Caio\",\n    matricula: 901909\n  }]);\n  const removeAluno = id => {\n    // Remove um aluno aleatório\n\n    const itemAleat = Math.floor(Math.random() * 5);\n    console.log(\"itemAleat: \", itemAleat);\n    /*\n    Explicação:\n    setAlunos(...): Esta função atualiza o estado alunos no React. Sempre que você chama setAlunos, o componente é re-renderizado com a nova lista de alunos.\n    alunos.filter(...): O método .filter() cria um novo array, incluindo apenas os elementos que passam no teste da função fornecida.\n    aluno => aluno.id !== id: Para cada aluno, verifica se o id dele é diferente do id passado como argumento. Se for diferente, o aluno permanece na lista; se for igual, ele é removido.\n    Resumo:\n    Esta linha remove o aluno com o id especificado da lista, criando uma nova lista sem esse aluno e atualizando o estado do componente.\n    Exemplo prático:\n    Se você tem [ {id: 1}, {id: 2} ] e chama removeAluno(2), o resultado será [ {id: 1} ].\n    */\n    setAlunos(alunos.filter(aluno => aluno.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Alunos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alunos.map(aluno => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [aluno.nome, \" - \", aluno.matricula, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeAluno(aluno.id),\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, aluno.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(RenderizaListaVetorRemove, \"NqE7fahY8Cdf7al/cMMgE/JxLbY=\");\n_c = RenderizaListaVetorRemove;\nexport default RenderizaListaVetorRemove;\nvar _c;\n$RefreshReg$(_c, \"RenderizaListaVetorRemove\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RenderizaListaVetorRemove","_s","alunos","setAlunos","useState","id","nome","matricula","removeAluno","itemAleat","Math","floor","random","console","log","filter","aluno","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/workspaces/projetoreactjsaluno/src/Componentes/modulo04/RenderizaListaVetorRemove.js"],"sourcesContent":["import React from 'react'\n\nconst RenderizaListaVetorRemove = () => {\n  const [alunos, setAlunos] = useState([\n    { id: 1, nome: \"Douglas\", matricula: 12345 },\n    { id: 2, nome: \"Pedro\", matricula: 34567 },\n    { id: 3, nome: \"Ricardo\", matricula: 67890 },\n    { id: 4, nome: \"Caio\", matricula: 901909 }\n  ])\n\n  const removeAluno = (id) => {\n    // Remove um aluno aleatório\n    \n    const itemAleat = Math.floor (Math.random () * 5);\n    console.log(\"itemAleat: \" , itemAleat)\n    /*\n    Explicação:\n\nsetAlunos(...): Esta função atualiza o estado alunos no React. Sempre que você chama setAlunos, o componente é re-renderizado com a nova lista de alunos.\nalunos.filter(...): O método .filter() cria um novo array, incluindo apenas os elementos que passam no teste da função fornecida.\naluno => aluno.id !== id: Para cada aluno, verifica se o id dele é diferente do id passado como argumento. Se for diferente, o aluno permanece na lista; se for igual, ele é removido.\nResumo:\nEsta linha remove o aluno com o id especificado da lista, criando uma nova lista sem esse aluno e atualizando o estado do componente.\n\nExemplo prático:\nSe você tem [ {id: 1}, {id: 2} ] e chama removeAluno(2), o resultado será [ {id: 1} ].\n    */\n    setAlunos(alunos.filter(aluno => aluno.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>Lista de Alunos</h2>\n      <ul>\n        {alunos.map((aluno) => (\n          <li key={aluno.id}>\n            {aluno.nome} - {aluno.matricula}\n            <button onClick={() => removeAluno(aluno.id)}>Remover</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default RenderizaListaVetorRemove"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,CACnC;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,SAAS,EAAE;EAAO,CAAC,CAC3C,CAAC;EAEF,MAAMC,WAAW,GAAIH,EAAE,IAAK;IAC1B;;IAEA,MAAMI,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAC;IACjDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAGL,SAAS,CAAC;IACtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAGIN,SAAS,CAACD,MAAM,CAACa,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACX,EAAE,KAAKA,EAAE,CAAC,CAAC;EACpD,CAAC;EAED,oBACEN,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA;MAAAkB,QAAA,EACGf,MAAM,CAACoB,GAAG,CAAEN,KAAK,iBAChBjB,OAAA;QAAAkB,QAAA,GACGD,KAAK,CAACV,IAAI,EAAC,KAAG,EAACU,KAAK,CAACT,SAAS,eAC/BR,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACQ,KAAK,CAACX,EAAE,CAAE;UAAAY,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFvDL,KAAK,CAACX,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAApB,EAAA,CAzCKD,yBAAyB;AAAAwB,EAAA,GAAzBxB,yBAAyB;AA2C/B,eAAeA,yBAAyB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}