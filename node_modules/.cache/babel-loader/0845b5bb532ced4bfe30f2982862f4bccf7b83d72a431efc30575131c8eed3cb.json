{"ast":null,"code":"var _jsxFileName = \"/workspaces/projetoreactjsaluno/src/Componentes/JogoCacaPalavrasParte02/TelaJogando.js\";\nimport React from 'react';\nimport \"./TelaJogando.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TelaJogando = ({\n  processarLetraJogo,\n  pontuacao,\n  obterCategoriaDoJogo,\n  tentativas,\n  letrasAdivinhadasVetor,\n  letrastoJogo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"css_telajogando\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tela Jogando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"css_pontuacao\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Pontua\\xE7\\xE3o: \", pontuacao, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Advinhe a palavra \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"css_dica\",\n      children: [\" Dica sobre a palavra.\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", obterCategoriaDoJogo, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Voc\\xEA ainda tem \", tentativas, \" tentativas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"css_container_palavra\",\n      children: letrastoJogo && letrastoJogo.map((letra, indice) => letrasAdivinhadasVetor.includes(letra))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: processarLetraJogo,\n      children: \"Finalizar Jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TelaJogando;\nvar _c;\n$RefreshReg$(_c, \"TelaJogando\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TelaJogando","processarLetraJogo","pontuacao","obterCategoriaDoJogo","tentativas","letrasAdivinhadasVetor","letrastoJogo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","letra","indice","includes","onClick","_c","$RefreshReg$"],"sources":["/workspaces/projetoreactjsaluno/src/Componentes/JogoCacaPalavrasParte02/TelaJogando.js"],"sourcesContent":["import React from 'react'\nimport \"./TelaJogando.css\"\nexport const TelaJogando = ({processarLetraJogo,\n          pontuacao,\n          obterCategoriaDoJogo,\n          tentativas,\n                  letrasAdivinhadasVetor,\n                  letrastoJogo\n\n}) => {\n  return (\n    <div className='css_telajogando'>\n       <h1>Tela Jogando</h1>\n        <p className=\"css_pontuacao\">\n                <span> Pontuação: {pontuacao} </span>\n                </p>\n                <h1> Advinhe a palavra </h1>\n                <h3 className=\"css_dica\"> Dica sobre a palavra. \n                    <span> {obterCategoriaDoJogo} </span>\n                </h3>\n                <p>Você ainda tem {tentativas} tentativas</p>\n\n                {/* Mostrar a palavra com as letras adivinhadas */}\n                {/*o método map vai gerar um loop e mostrar múltiplos quadrados brancos.*/}\n                {/* Se a letra tiver sido advinhinhada vou mostrar ela.*/}\n                <div className=\"css_container_palavra\"> \n                    { letrastoJogo && letrastoJogo.map ((letra,indice) => (\n                        letrasAdivinhadasVetor.includes(letra) \n                    ))} \n                </div>\n       <button onClick={processarLetraJogo}>Finalizar Jogo</button>\n    </div>\n  )\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1B,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAACC,kBAAkB;EACrCC,SAAS;EACTC,oBAAoB;EACpBC,UAAU;EACFC,sBAAsB;EACtBC;AAElB,CAAC,KAAK;EACJ,oBACEP,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC7BT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBb,OAAA;MAAGQ,SAAS,EAAC,eAAe;MAAAC,QAAA,eACpBT,OAAA;QAAAS,QAAA,GAAM,oBAAY,EAACN,SAAS,EAAC,GAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACJb,OAAA;MAAAS,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bb,OAAA;MAAIQ,SAAS,EAAC,UAAU;MAAAC,QAAA,GAAC,wBACrB,eAAAT,OAAA;QAAAS,QAAA,GAAM,GAAC,EAACL,oBAAoB,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACLb,OAAA;MAAAS,QAAA,GAAG,oBAAe,EAACJ,UAAU,EAAC,aAAW;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAK7Cb,OAAA;MAAKQ,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAChCF,YAAY,IAAIA,YAAY,CAACO,GAAG,CAAE,CAACC,KAAK,EAACC,MAAM,KAC7CV,sBAAsB,CAACW,QAAQ,CAACF,KAAK,CACxC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACfb,OAAA;MAAQkB,OAAO,EAAEhB,kBAAmB;MAAAO,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAAAM,EAAA,GA/BYlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}