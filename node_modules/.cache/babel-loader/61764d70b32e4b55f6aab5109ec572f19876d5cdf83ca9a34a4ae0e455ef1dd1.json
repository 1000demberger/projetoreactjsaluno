{"ast":null,"code":"var _jsxFileName = \"/workspaces/projetoreactjsaluno/src/Componentes/modulo01/CalculadoraIP.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculadoraIP = () => {\n  _s();\n  const [ip, setIp] = useState('');\n  const [mask, setMask] = useState('');\n  const [result, setResult] = useState(null);\n  const calculateNetworkInfo = () => {\n    const ipParts = ip.split('.').map(Number);\n    const maskParts = mask.split('.').map(Number);\n    if (ipParts.length !== 4 || maskParts.length !== 4) {\n      alert('Por favor, insira um endereço IPv4 e máscara válidos.');\n      return;\n    }\n    const networkAddress = ipParts.map((part, i) => part & maskParts[i]);\n    const broadcastAddress = ipParts.map((part, i) => part | ~maskParts[i] & 255);\n    const possibleIPs = [];\n    for (let i = 1; i < (1 << 32 - maskParts.reduce((acc, part) => acc + part.toString(2).replace(/0/g, '').length, 0)) - 1; i++) {\n      const possibleIP = [...networkAddress];\n      let carry = i;\n      for (let j = 3; j >= 0; j--) {\n        possibleIP[j] += carry;\n        carry = Math.floor(possibleIP[j] / 256);\n        possibleIP[j] %= 256;\n      }\n      possibleIPs.push(possibleIP.join('.'));\n    }\n    setResult({\n      networkAddress: networkAddress.join('.'),\n      broadcastAddress: broadcastAddress.join('.'),\n      possibleIPs\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculadora de IP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Endere\\xE7o IPv4:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ip,\n          onChange: e => setIp(e.target.value),\n          placeholder: \"Ex: 192.168.1.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"M\\xE1scara de Rede:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mask,\n          onChange: e => setMask(e.target.value),\n          placeholder: \"Ex: 255.255.255.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateNetworkInfo,\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Endere\\xE7o de Rede:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this), \" \", result.networkAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Endere\\xE7o de Broadcast:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this), \" \", result.broadcastAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Array.from({\n              length: 10\n            }).map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"Coluna \", colIndex + 1]\n            }, colIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Array.from({\n            length: Math.ceil(result.possibleIPs.length / 10)\n          }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Array.from({\n              length: 10\n            }).map((_, colIndex) => {\n              const ipIndex = rowIndex * 10 + colIndex;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.possibleIPs[ipIndex] || ''\n              }, colIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 45\n              }, this);\n            })\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Endere\\xE7os IPs Poss\\xEDveis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: result.possibleIPs.map((ip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ip\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(CalculadoraIP, \"DtVnY1cx4/09Wv+4wb8KwfpW46A=\");\n_c = CalculadoraIP;\nexport default CalculadoraIP;\nvar _c;\n$RefreshReg$(_c, \"CalculadoraIP\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CalculadoraIP","_s","ip","setIp","mask","setMask","result","setResult","calculateNetworkInfo","ipParts","split","map","Number","maskParts","length","alert","networkAddress","part","i","broadcastAddress","possibleIPs","reduce","acc","toString","replace","possibleIP","carry","j","Math","floor","push","join","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Array","from","_","colIndex","ceil","rowIndex","ipIndex","index","_c","$RefreshReg$"],"sources":["/workspaces/projetoreactjsaluno/src/Componentes/modulo01/CalculadoraIP.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CalculadoraIP = () => {\n    const [ip, setIp] = useState('');\n    const [mask, setMask] = useState('');\n    const [result, setResult] = useState(null);\n\n    const calculateNetworkInfo = () => {\n        const ipParts = ip.split('.').map(Number);\n        const maskParts = mask.split('.').map(Number);\n\n        if (ipParts.length !== 4 || maskParts.length !== 4) {\n            alert('Por favor, insira um endereço IPv4 e máscara válidos.');\n            return;\n        }\n\n        const networkAddress = ipParts.map((part, i) => part & maskParts[i]);\n        const broadcastAddress = ipParts.map((part, i) => part | ~maskParts[i] & 255);\n\n        const possibleIPs = [];\n        for (let i = 1; i < (1 << (32 - maskParts.reduce((acc, part) => acc + part.toString(2).replace(/0/g, '').length, 0))) - 1; i++) {\n            const possibleIP = [...networkAddress];\n            let carry = i;\n            for (let j = 3; j >= 0; j--) {\n                possibleIP[j] += carry;\n                carry = Math.floor(possibleIP[j] / 256);\n                possibleIP[j] %= 256;\n            }\n            possibleIPs.push(possibleIP.join('.'));\n        }\n\n        setResult({\n            networkAddress: networkAddress.join('.'),\n            broadcastAddress: broadcastAddress.join('.'),\n            possibleIPs,\n        });\n    };\n\n    return (\n        <div>\n            <h1>Calculadora de IP</h1>\n            <div>\n                <label>\n                    Endereço IPv4:\n                    <input\n                        type=\"text\"\n                        value={ip}\n                        onChange={(e) => setIp(e.target.value)}\n                        placeholder=\"Ex: 192.168.1.1\"\n                    />\n                </label>\n            </div>\n            <div>\n                <label>\n                    Máscara de Rede:\n                    <input\n                        type=\"text\"\n                        value={mask}\n                        onChange={(e) => setMask(e.target.value)}\n                        placeholder=\"Ex: 255.255.255.0\"\n                    />\n                </label>\n            </div>\n            <button onClick={calculateNetworkInfo}>Calcular</button>\n            {result && (\n                <div>\n                    <h2>Resultados:</h2>\n                    <p><strong>Endereço de Rede:</strong> {result.networkAddress}</p>\n                    <p><strong>Endereço de Broadcast:</strong> {result.broadcastAddress}</p>\n                    <table>\n                        <thead>\n                            <tr>\n                                {Array.from({ length: 10 }).map((_, colIndex) => (\n                                    <th key={colIndex}>Coluna {colIndex + 1}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Array.from({ length: Math.ceil(result.possibleIPs.length / 10) }).map((_, rowIndex) => (\n                                <tr key={rowIndex}>\n                                    {Array.from({ length: 10 }).map((_, colIndex) => {\n                                        const ipIndex = rowIndex * 10 + colIndex;\n                                        return (\n                                            <td key={colIndex}>\n                                                {result.possibleIPs[ipIndex] || ''}\n                                            </td>\n                                        );\n                                    })}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <p><strong>Endereços IPs Possíveis:</strong></p>\n                    <ul>\n                        {result.possibleIPs.map((ip, index) => (\n                            <li key={index}>{ip}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CalculadoraIP;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}