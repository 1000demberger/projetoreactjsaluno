{"ast":null,"code":"var _jsxFileName = \"/workspaces/projetoreactjsaluno/src/Componentes/JogoCacaPalavras/JogoCacaPalavrasPrincipal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { palavrasLista } from \"./Util/Word\";\nimport { TelaInicialProjeto } from './TelaInicialProjeto';\nimport \"./JogoCacaPalavrasPrincipal.css\";\n\n// Estágios do jogo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst estagios = [{\n  id: 1,\n  nome: \"Início\"\n},\n// 0\n{\n  id: 2,\n  nome: \"Jogando\"\n},\n// 1\n{\n  id: 3,\n  nome: \"Fim de jogo\"\n}]; // 2\n/**\n * Componente principal do jogo de caça-palavras.\n *\n * @component\n *\n * @returns {JSX.Element} O container principal do jogo de caça-palavras.\n *\n * As duas próximas linhas representam:\n * - A primeira linha define o estado atual do estágio do jogo, iniciando pelo primeiro estágio da lista de estágios.\n * - A segunda linha define o estado das palavras do jogo, utilizando a lista de palavras fornecida.\n */\nconst JogoCacaPalavrasPrincipal = () => {\n  _s();\n  const [estagioJogo, setEstagiodoJogo] = useState(estagios[0].nome);\n  const [palavrasJogo] = useState(palavrasLista);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jogo-caca-palavras-container\",\n    children: [console.log(\"Dica estagioJogo: \", estagioJogo), estagioJogo === \"Início\" && /*#__PURE__*/_jsxDEV(TelaInicialProjeto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(JogoCacaPalavrasPrincipal, \"SYzQ6BrpfRuCA+I+6KNHoGQKqXk=\");\n_c = JogoCacaPalavrasPrincipal;\nexport default JogoCacaPalavrasPrincipal;\nvar _c;\n$RefreshReg$(_c, \"JogoCacaPalavrasPrincipal\");","map":{"version":3,"names":["React","useState","palavrasLista","TelaInicialProjeto","jsxDEV","_jsxDEV","estagios","id","nome","JogoCacaPalavrasPrincipal","_s","estagioJogo","setEstagiodoJogo","palavrasJogo","className","children","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/projetoreactjsaluno/src/Componentes/JogoCacaPalavras/JogoCacaPalavrasPrincipal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {palavrasLista} from \"./Util/Word\"\nimport { TelaInicialProjeto } from './TelaInicialProjeto'\nimport \"./JogoCacaPalavrasPrincipal.css\"\n\n  // Estágios do jogo\n  const estagios = [\n  {id:1,nome: \"Início\"}, // 0\n  {id:2,nome: \"Jogando\"}, // 1\n  {id:3,nome: \"Fim de jogo\"} ] // 2\n/**\n * Componente principal do jogo de caça-palavras.\n *\n * @component\n *\n * @returns {JSX.Element} O container principal do jogo de caça-palavras.\n *\n * As duas próximas linhas representam:\n * - A primeira linha define o estado atual do estágio do jogo, iniciando pelo primeiro estágio da lista de estágios.\n * - A segunda linha define o estado das palavras do jogo, utilizando a lista de palavras fornecida.\n */\nconst JogoCacaPalavrasPrincipal = () => {\n\n  const [estagioJogo,setEstagiodoJogo] = useState (estagios[0].nome)\n  const [palavrasJogo] = useState (palavrasLista)\n  return (\n    <div className=\"jogo-caca-palavras-container\">\n        {/* <TelaInicialProjeto /> */}\n        \n        {console.log(\"Dica estagioJogo: \",estagioJogo)}\n        {estagioJogo === \"Início\" && <TelaInicialProjeto />}\n    </div>\n  )\n}\n\nexport default JogoCacaPalavrasPrincipal"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,aAAa,QAAO,aAAa;AACzC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAO,iCAAiC;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,CACjB;EAACC,EAAE,EAAC,CAAC;EAACC,IAAI,EAAE;AAAQ,CAAC;AAAE;AACvB;EAACD,EAAE,EAAC,CAAC;EAACC,IAAI,EAAE;AAAS,CAAC;AAAE;AACxB;EAACD,EAAE,EAAC,CAAC;EAACC,IAAI,EAAE;AAAa,CAAC,CAAE,EAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtC,MAAM,CAACC,WAAW,EAACC,gBAAgB,CAAC,GAAGX,QAAQ,CAAEK,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC;EAClE,MAAM,CAACK,YAAY,CAAC,GAAGZ,QAAQ,CAAEC,aAAa,CAAC;EAC/C,oBACEG,OAAA;IAAKS,SAAS,EAAC,8BAA8B;IAAAC,QAAA,GAGxCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACN,WAAW,CAAC,EAC7CA,WAAW,KAAK,QAAQ,iBAAIN,OAAA,CAACF,kBAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAAX,EAAA,CAZKD,yBAAyB;AAAAa,EAAA,GAAzBb,yBAAyB;AAc/B,eAAeA,yBAAyB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}