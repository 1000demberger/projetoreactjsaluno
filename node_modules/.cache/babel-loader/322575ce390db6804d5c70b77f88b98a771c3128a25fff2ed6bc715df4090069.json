{"ast":null,"code":"var _jsxFileName = \"/workspaces/projetoreactjsaluno/src/Componentes/JogoCacaPalavrasParte02/TelaJogando.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./TelaJogando.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TelaJogando = ({\n  processarLetraJogo,\n  pontuacao,\n  obterCategoriaDoJogo,\n  tentativas,\n  letrasAdivinhadasVetor,\n  letrastoJogo\n}) => {\n  _s();\n  {/* Relacionados ao formulário. */}\n  const [letraDigitada, setLetraDigitada] = useState(\"\");\n  const letraDigitadaRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"css_telajogando\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tela Jogando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"css_pontuacao\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Pontua\\xE7\\xE3o: \", pontuacao, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Advinhe a palavra \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"css_dica\",\n      children: [\" Dica sobre a palavra.\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", obterCategoriaDoJogo, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Voc\\xEA ainda tem \", tentativas, \" tentativas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"css_container_palavra\",\n      children: letrastoJogo && letrastoJogo.map((letra, indice) => letrasAdivinhadasVetor.includes(letra))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Tente Advinhar uma letra da palavra \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Letra\",\n        maxLength: \"1\",\n        required: true,\n        onChange: e => setLetraDigitada(e.target.value),\n        value: letraDigitada,\n        ref: letraDigitadaRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Jogar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 27\n      }, this), console.log(\"Dica letraDigitada\", letraDigitada), console.log(\"Dica letraDigitadaRef\", letraDigitadaRef)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: processarLetraJogo,\n      children: \"Finalizar Jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TelaJogando, \"k0FdGBmB1zUw2llFqKtvh1pHX/I=\");\n_c = TelaJogando;\nvar _c;\n$RefreshReg$(_c, \"TelaJogando\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TelaJogando","processarLetraJogo","pontuacao","obterCategoriaDoJogo","tentativas","letrasAdivinhadasVetor","letrastoJogo","_s","letraDigitada","setLetraDigitada","useState","letraDigitadaRef","useRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","letra","indice","includes","type","name","maxLength","required","onChange","e","target","value","ref","console","log","onClick","_c","$RefreshReg$"],"sources":["/workspaces/projetoreactjsaluno/src/Componentes/JogoCacaPalavrasParte02/TelaJogando.js"],"sourcesContent":["import React from 'react'\nimport \"./TelaJogando.css\"\nexport const TelaJogando = ({processarLetraJogo,\n          pontuacao,\n          obterCategoriaDoJogo,\n          tentativas,\n                  letrasAdivinhadasVetor,\n                  letrastoJogo\n\n}) => {\n  {/* Relacionados ao formulário. */}\n  const [letraDigitada,setLetraDigitada] = useState (\"\");\n  const letraDigitadaRef = useRef (null)\n  return (\n    <div className='css_telajogando'>\n       <h1>Tela Jogando</h1>\n        <p className=\"css_pontuacao\">\n                <span> Pontuação: {pontuacao} </span>\n                </p>\n                <h1> Advinhe a palavra </h1>\n                <h3 className=\"css_dica\"> Dica sobre a palavra. \n                    <span> {obterCategoriaDoJogo} </span>\n                </h3>\n                <p>Você ainda tem {tentativas} tentativas</p>\n\n                {/* Quadrado Amarelo. \n                Mostrar a palavra com as letras adivinhadas */}\n                {/*o método map vai gerar um loop e mostrar múltiplos quadrados brancos.*/}\n                {/* Se a letra tiver sido advinhinhada vou mostrar ela.*/}\n                <div className=\"css_container_palavra\"> \n                    { letrastoJogo && letrastoJogo.map ((letra,indice) => (\n                        letrasAdivinhadasVetor.includes(letra) \n                    ))} \n                </div>\n\n                {/* Criar o formulário */}\n                 <p> Tente Advinhar uma letra da palavra </p>\n                    {/* onSubmit={handleFuncaoSubmeter} */}\n                    <form >\n                        <input type=\"text\" name=\"Letra\" maxLength=\"1\" required \n                          onChange={(e) => setLetraDigitada (e.target.value)}\n                          value={letraDigitada}\n                          ref = {letraDigitadaRef}/>\n                          <button>\n                            Jogar\n                          </button>\n                          {console.log (\"Dica letraDigitada\",letraDigitada)}\n                          {console.log (\"Dica letraDigitadaRef\", letraDigitadaRef)}\n                    </form>\n\n\n\n            <button onClick={processarLetraJogo}>Finalizar Jogo</button>\n    </div>\n  )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}